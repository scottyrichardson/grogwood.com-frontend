name: Grogwood.com

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_S3_BUCKET_NAME: ${{ vars.AWS_S3_BUCKET_NAME }}
  AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  CSS_FILE_PATH: "dist/assets/css/styles.min.css"
  NODE_VERSION: ${{ vars.NODE_VERSION }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install NPM dependencies
        run: npm ci

      - name: Install Gulp globally
        run: npm install -g gulp-cli

      - name: Run Production Build
        run: gulp prod

      - name: Verify dist directory exists
        run: |
          if [ ! -d "dist" ]; then
            echo "Dist directory not created!"
            exit 1
          fi

      - name: Verify critical files exist
        run: |
          files=(
            "dist/index.html"
            "${{ env.CSS_FILE_PATH }}"
          )
          for file in "${files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Missing file: $file"
              exit 1
            fi
          done

      - name: Validate HTML
        run: |
          npx html-validate "dist/**/*.html"

      - name: Check file sizes
        run: |
          if [ -f "${{ env.CSS_FILE_PATH }}" ]; then
            css_size=$(stat -f%z "${{ env.CSS_FILE_PATH }}" 2>/dev/null || stat -c%s "${{ env.CSS_FILE_PATH }}")
            echo "CSS size: $css_size bytes"
            if [ "$css_size" -gt 500000 ]; then
              echo "Warning: CSS file is larger than 500KB"
            fi
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  deploy:
    name: Deploy to AWS S3 Bucket
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Configure AWS CLI credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload artifact to AWS S3 bucket
        run: |
          aws s3 sync dist/ s3://${{ vars.AWS_S3_BUCKET_NAME }}

      - name: Invalidate AWS CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
