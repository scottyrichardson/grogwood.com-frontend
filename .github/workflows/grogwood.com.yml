name: Grogwood.com

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_S3_BUCKET_NAME: ${{ vars.AWS_S3_BUCKET_NAME }}
  AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  NODE_VERSION: 20.x
  BUILD_PATH: dist
  GULP_BUILD_TASK: prod
  CSS_FILE_PATH: dist/assets/css/styles.min.css
  INDEX_FILE_PATH: dist/index.html

jobs:
  build:
    name: Build [ Gulp ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build project
        uses: ./.github/actions/gulp-build
        with:
          node-version: ${{ env.NODE_VERSION }}
          gulp-build-task: ${{ env.GULP_BUILD_TASK }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_PATH }}
          path: ${{ env.BUILD_PATH }}
          retention-days: 7

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD_PATH }}
          path: ${{ env.BUILD_PATH }}

      - name: Validate CSS file
        uses: ./.github/actions/validate-file
        with:
          file-path: ${{ env.CSS_FILE_PATH }}

      - name: Validate index file
        uses: ./.github/actions/validate-file
        with:
          file-path: ${{ env.INDEX_FILE_PATH }}

      - name: Validate HTML files
        uses: ./.github/actions/validate-html
        with:
          node-version: ${{ env.NODE_VERSION }}
          source-path: ${{ env.BUILD_PATH }}

  deploy:
    name: Deploy [ AWS ]
    runs-on: ubuntu-latest
    needs: [build, validate]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD_PATH }}
          path: ${{ env.BUILD_PATH }}

      - name: Deploy artifact to AWS S3 bucket
        uses: ./.github/actions/aws-s3-upload
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          s3-bucket-name: ${{ env.AWS_S3_BUCKET_NAME }}
          source-path: ${{ env.BUILD_PATH }}

  invalidate-cache:
    name: Invalidate Cache [ CloudFront ]
    runs-on: ubuntu-latest
    needs: [build, validate, deploy]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Invalidate CloudFront cache
        uses: ./.github/actions/aws-cloudfront-invalidation
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          cloudfront-distribution-id: ${{ env.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          cloudfront-invalidation-path: /*
